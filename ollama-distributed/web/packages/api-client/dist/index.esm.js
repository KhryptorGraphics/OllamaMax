async function t(t,{baseUrl:o="/api",headers:r,...e}={}){const i=await fetch(`${o}${t}`,{...e,headers:{"Content-Type":"application/json",...r||{}},credentials:"include"});if(!i.ok){const t=await i.text();throw new Error(t||`HTTP ${i.status}`)}return await i.json()}async function o(o,r,e){try{return await t(o,e)}catch(o){if(r)return await t(r,e);throw o}}const r={login:t=>o("/v1/auth/login","/v1/login",{method:"POST",body:JSON.stringify(t)}),register:t=>o("/v1/auth/register","/v1/register",{method:"POST",body:JSON.stringify(t)}),logout:()=>o("/v1/auth/logout","/v1/user/logout",{method:"POST"}),profile:()=>o("/v1/profile","/v1/user/profile",{method:"GET"}),forgotPassword:t=>o("/v1/auth/forgot-password",null,{method:"POST",body:JSON.stringify(t)}),resetPassword:t=>o("/v1/auth/reset-password",null,{method:"POST",body:JSON.stringify(t)}),verifyEmail:t=>o("/v1/auth/verify-email",null,{method:"POST",body:JSON.stringify(t)})};export{r as AuthAPI,t as http};
//# sourceMappingURL=index.esm.js.map
