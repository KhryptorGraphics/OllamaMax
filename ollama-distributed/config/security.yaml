# OllamaMax Enterprise Security Configuration
# Comprehensive security hardening for production deployment

security:
  # Security mode: basic, standard, enterprise
  mode: enterprise
  hardening_level: strict
  
  # Global security settings
  enabled: true
  enforce_https: true
  security_headers: true
  content_security_policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'"
  hsts_max_age: 31536000  # 1 year
  
  # TLS/SSL Configuration
  tls:
    enabled: true
    min_version: "1.3"  # TLS 1.3 minimum
    cert_file: "/etc/ssl/certs/server.crt"
    key_file: "/etc/ssl/private/server.key"
    ca_file: "/etc/ssl/certs/ca.crt"
    mutual_tls: true
    ocsp_stapling: true
    certificate_rotation: 2160h  # 90 days
    cipher_suites:
      - "TLS_AES_256_GCM_SHA384"
      - "TLS_CHACHA20_POLY1305_SHA256"
      - "TLS_AES_128_GCM_SHA256"
    curve_preferences:
      - "X25519"
      - "P-384"
      - "P-256"

  # Authentication Configuration
  authentication:
    enabled: true
    methods: ["jwt", "oauth2", "oidc", "api_key", "mfa"]
    require_authentication: true
    session_timeout: 24h
    max_concurrent_sessions: 5
    
    # JWT Configuration
    jwt:
      secret_key_file: "/etc/secrets/jwt-secret"
      issuer: "ollamamax-enterprise"
      audience: "ollamamax-platform"
      algorithm: "HS256"
      expiry: 24h
      refresh_enabled: true
      refresh_expiry: 168h  # 7 days
    
    # API Key Configuration
    api_keys:
      enabled: true
      key_file: "/etc/secrets/api-keys"
      rotation_enabled: true
      rotation_interval: 720h  # 30 days
      max_keys_per_user: 5
    
    # OAuth2/OIDC Configuration
    oauth2:
      enabled: true
      providers:
        - name: "google"
          type: "oidc"
          issuer_url: "https://accounts.google.com"
          client_id_file: "/etc/secrets/google-client-id"
          client_secret_file: "/etc/secrets/google-client-secret"
          scopes: ["openid", "email", "profile"]
          enabled: false
        - name: "azure"
          type: "oidc"
          issuer_url: "https://login.microsoftonline.com/common/v2.0"
          client_id_file: "/etc/secrets/azure-client-id"
          client_secret_file: "/etc/secrets/azure-client-secret"
          scopes: ["openid", "email", "profile"]
          enabled: false
        - name: "github"
          type: "oauth2"
          auth_url: "https://github.com/login/oauth/authorize"
          token_url: "https://github.com/login/oauth/access_token"
          user_info_url: "https://api.github.com/user"
          client_id_file: "/etc/secrets/github-client-id"
          client_secret_file: "/etc/secrets/github-client-secret"
          scopes: ["user:email"]
          enabled: false

  # Multi-Factor Authentication
  mfa:
    enabled: true
    required: true
    methods: ["totp", "backup_codes"]
    grace_period: 168h  # 7 days for new users
    max_attempts: 3
    lockout_duration: 15m
    
    # TOTP Configuration
    totp:
      issuer: "OllamaMax"
      digits: 6
      period: 30
      algorithm: "SHA1"
    
    # Backup Codes
    backup_codes:
      count: 10
      length: 8
    
    # SMS (if enabled)
    sms:
      enabled: false
      provider: "twilio"
      config_file: "/etc/secrets/sms-config"
    
    # Email (if enabled)
    email:
      enabled: false
      provider: "smtp"
      config_file: "/etc/secrets/email-config"

  # Authorization & RBAC
  authorization:
    enabled: true
    rbac: true
    default_role: "user"
    roles:
      - name: "admin"
        permissions:
          - "system:admin"
          - "users:*"
          - "models:*"
          - "security:*"
          - "audit:*"
      - name: "operator"
        permissions:
          - "models:read"
          - "models:manage"
          - "inference:execute"
          - "system:monitor"
      - name: "user"
        permissions:
          - "models:read"
          - "inference:execute"
          - "profile:manage"
      - name: "readonly"
        permissions:
          - "models:read"
          - "system:status"

  # Data Encryption
  encryption:
    enabled: true
    at_rest: true
    in_transit: true
    algorithm: "AES-256-GCM"
    key_file: "/etc/secrets/encryption-key"
    key_rotation: true
    key_rotation_interval: 720h  # 30 days
    
    # HSM Integration (if available)
    hsm:
      enabled: false
      provider: "pkcs11"
      config_file: "/etc/secrets/hsm-config"

  # Rate Limiting & DDoS Protection
  rate_limiting:
    enabled: true
    
    # Global limits
    global:
      enabled: true
      limit: 10000  # requests per second
      burst: 100
    
    # Per-user limits
    user:
      enabled: true
      limit: 1000   # requests per minute
      burst: 50
    
    # Per-IP limits
    ip:
      enabled: true
      limit: 100    # requests per minute
      burst: 20
    
    # Banning
    ban:
      enabled: true
      threshold: 5  # violations before ban
      duration: 15m
      check_interval: 1m
    
    # Geo-blocking
    geo_blocking:
      enabled: false
      blocked_countries: []
      allowed_countries: []
    
    # DDoS protection
    ddos:
      enabled: true
      threshold: 1000  # requests per second
      window_size: 10s
      auto_block: true

  # Web Application Firewall
  waf:
    enabled: true
    mode: "prevention"  # detection, prevention
    log_blocked: true
    owasp_crs: true
    
    # Request limits
    max_request_size: 10485760  # 10MB
    max_header_size: 8192       # 8KB
    max_query_params: 100
    max_post_params: 100
    
    # Allowed/blocked methods
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "HEAD"]
    
    # File extension restrictions
    allowed_extensions: ["json", "xml", "txt", "csv"]
    blocked_extensions: ["php", "asp", "aspx", "jsp", "pl", "py", "sh", "exe", "bat", "cmd"]
    
    # Custom rules
    custom_rules:
      - id: "custom_001"
        name: "Block admin paths"
        pattern: "/(admin|wp-admin|phpmyadmin)"
        action: "block"
        severity: "high"
        enabled: true
      - id: "custom_002"
        name: "Block suspicious user agents"
        pattern: "(?i)(sqlmap|nmap|nikto|dirb|gobuster)"
        action: "block"
        severity: "high"
        enabled: true

  # Data Loss Prevention
  dlp:
    enabled: true
    scan_uploads: true
    scan_requests: true
    scan_responses: false
    block_sensitive_data: true
    mask_sensitive_data: true
    quarantine_path: "/var/lib/ollama/quarantine"
    max_file_size: 52428800  # 50MB
    scan_timeout: 30s
    
    # Allowed/blocked file types
    allowed_file_types: ["txt", "json", "xml", "csv", "yaml", "yml"]
    blocked_file_types: ["exe", "bat", "sh", "ps1", "vbs"]
    
    # Data classification
    classification:
      enabled: true
      levels: ["public", "internal", "confidential", "restricted"]
      default_level: "internal"
      enforce_labeling: false
    
    # Retention policy
    retention:
      quarantine_retention: 2160h  # 90 days
      log_retention: 8760h         # 1 year
      alert_retention: 720h        # 30 days
      auto_delete: true
    
    # Compliance modes
    compliance: ["SOC2", "GDPR"]

  # Audit Logging
  audit:
    enabled: true
    level: "INFO"  # DEBUG, INFO, WARN, ERROR
    format: "json"
    file: "/var/log/ollama/audit.log"
    max_size: 100  # MB
    max_backups: 10
    max_age: 30    # days
    compress: true
    
    # Events to log
    events:
      - "authentication"
      - "authorization"
      - "data_access"
      - "configuration_change"
      - "security_violation"
      - "system_error"
    
    # SIEM integration
    siem:
      enabled: false
      endpoint: "https://siem.company.com/api/events"
      format: "cef"  # cef, leef, json
      batch_size: 100
      flush_interval: 60s

  # Threat Detection
  threat_detection:
    enabled: true
    ml_detection: false
    threshold: 0.7
    
    # Behavioral analysis
    behavioral:
      enabled: true
      baseline_period: 168h  # 7 days
      anomaly_threshold: 2.0
    
    # Reputation checking
    reputation:
      enabled: false
      providers: ["virustotal", "abuseipdb"]
      cache_ttl: 3600s

  # Secret Management
  secrets:
    # HashiCorp Vault integration
    vault:
      enabled: false
      address: "https://vault.company.com"
      namespace: "ollama"
      mount_path: "secret"
      token_file: "/etc/secrets/vault-token"
    
    # File-based secrets (development/testing)
    files:
      enabled: true
      base_path: "/etc/secrets"
      permissions: "0600"

  # Compliance & Monitoring
  compliance:
    framework: "SOC2"  # SOC2, ISO27001, NIST, PCI_DSS, HIPAA
    continuous_monitoring: true
    reporting: true
    report_path: "/var/lib/ollama/compliance"
    
    # Automated compliance checks
    checks:
      - "password_policy"
      - "encryption_enabled"
      - "audit_logging"
      - "access_controls"
      - "data_classification"
      - "incident_response"

  # Security Monitoring
  monitoring:
    enabled: true
    metrics_interval: 60s
    
    # Prometheus integration
    prometheus:
      enabled: true
      endpoint: "http://prometheus:9090"
      tls:
        enabled: true
        cert_file: "/etc/ssl/certs/prometheus.crt"
        key_file: "/etc/ssl/private/prometheus.key"
    
    # Grafana dashboards
    grafana:
      enabled: true
      endpoint: "http://grafana:3000"
      dashboards_path: "/etc/grafana/dashboards"

  # Incident Response
  incident_response:
    enabled: true
    
    # Automated responses
    auto_response:
      enabled: true
      actions:
        - "block_ip"
        - "disable_user"
        - "quarantine_data"
        - "alert_admin"
    
    # Notification channels
    notifications:
      email:
        enabled: false
        smtp_server: "smtp.company.com"
        recipients: ["security@company.com"]
      slack:
        enabled: false
        webhook_url_file: "/etc/secrets/slack-webhook"
      teams:
        enabled: false
        webhook_url_file: "/etc/secrets/teams-webhook"

  # Security Testing
  testing:
    # Automated security testing
    enabled: false
    schedule: "0 2 * * *"  # Daily at 2 AM
    
    tests:
      - "vulnerability_scan"
      - "penetration_test"
      - "compliance_check"
      - "configuration_audit"

# Network Security
network:
  # Firewall rules
  firewall:
    enabled: true
    default_policy: "deny"
    
    rules:
      - name: "allow_https"
        direction: "inbound"
        protocol: "tcp"
        port: 443
        action: "allow"
      - name: "allow_http_redirect"
        direction: "inbound"
        protocol: "tcp"
        port: 80
        action: "allow"
      - name: "allow_api"
        direction: "inbound"
        protocol: "tcp"
        port: 8443
        action: "allow"
      - name: "allow_metrics"
        direction: "inbound"
        protocol: "tcp"
        port: 9443
        action: "allow"
        source: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
  
  # Network segmentation
  segmentation:
    enabled: true
    zones:
      - name: "dmz"
        description: "Public-facing services"
        subnets: ["10.1.0.0/24"]
      - name: "application"
        description: "Application tier"
        subnets: ["10.2.0.0/24"]
      - name: "data"
        description: "Database tier"
        subnets: ["10.3.0.0/24"]
      - name: "management"
        description: "Management and monitoring"
        subnets: ["10.4.0.0/24"]

# Container Security
container:
  # Runtime security
  runtime:
    user: "nonroot"
    read_only_root: true
    no_new_privileges: true
    drop_capabilities: ["ALL"]
    add_capabilities: []
    
  # Resource limits
  resources:
    memory_limit: "2Gi"
    cpu_limit: "2000m"
    ephemeral_storage_limit: "10Gi"
    
  # Security context
  security_context:
    run_as_non_root: true
    run_as_user: 65532
    run_as_group: 65532
    fs_group: 65532
    seccomp_profile:
      type: "RuntimeDefault"
    selinux_options:
      type: "container_t"

# Backup & Recovery
backup:
  # Configuration backup
  config_backup:
    enabled: true
    schedule: "0 1 * * *"  # Daily at 1 AM
    retention: 30  # days
    encryption: true
    
  # Data backup
  data_backup:
    enabled: true
    schedule: "0 0 * * 0"  # Weekly on Sunday
    retention: 12  # weeks
    encryption: true
    
  # Recovery procedures
  recovery:
    rto: 4h   # Recovery Time Objective
    rpo: 24h  # Recovery Point Objective
    testing_schedule: "monthly"