# TLS/SSL Configuration
# Production-ready TLS settings with modern security standards

tls:
  # Certificate Configuration
  certificates:
    # Primary certificate
    primary:
      cert_file: "/etc/ssl/certs/ollama-distributed.crt"
      key_file: "/etc/ssl/private/ollama-distributed.key"
      ca_file: "/etc/ssl/certs/ca-bundle.crt"
    
    # Certificate rotation
    rotation:
      enabled: true
      check_interval: "24h"
      renewal_threshold: "30d"  # Renew 30 days before expiry
      backup_count: 3
  
  # TLS Version Configuration
  versions:
    min_version: "1.3"  # TLS 1.3 minimum for production
    max_version: "1.3"  # Restrict to TLS 1.3 only
  
  # Cipher Suites (TLS 1.3)
  cipher_suites_tls13:
    - "TLS_AES_256_GCM_SHA384"
    - "TLS_AES_128_GCM_SHA256"
    - "TLS_CHACHA20_POLY1305_SHA256"
  
  # Cipher Suites (TLS 1.2 - if min_version is lowered)
  cipher_suites_tls12:
    - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
    - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
    - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
  
  # Elliptic Curves
  curves:
    - "X25519"
    - "P-384"
    - "P-256"
  
  # Session Configuration
  session:
    # Session tickets
    tickets:
      enabled: true
      key_rotation_interval: "24h"
      max_age: "24h"
    
    # Session cache
    cache:
      enabled: true
      size: 1000
      timeout: "1h"
  
  # Client Authentication
  client_auth:
    enabled: false  # Enable for mutual TLS
    mode: "request"  # require, request, verify_if_given, none
    ca_files:
      - "/etc/ssl/certs/client-ca.crt"
  
  # OCSP Stapling
  ocsp:
    enabled: true
    responder_url: "http://ocsp.example.com"
    cache_duration: "1h"
  
  # Certificate Validation
  validation:
    verify_hostname: true
    verify_expiry: true
    allowed_dns_names:
      - "*.ollama-distributed.com"
      - "ollama-distributed.com"
    allowed_ip_addresses: []
  
  # HSTS Configuration
  hsts:
    enabled: true
    max_age: 31536000  # 1 year
    include_subdomains: true
    preload: true

# Certificate Generation Script Template
certificate_generation:
  # For development/testing - DO NOT USE IN PRODUCTION
  self_signed_script: |
    #!/bin/bash
    # Generate self-signed certificate for development
    
    # Create directories
    mkdir -p /etc/ssl/certs /etc/ssl/private
    
    # Generate private key
    openssl genpkey -algorithm RSA -out /etc/ssl/private/ollama-distributed.key -pkeyopt rsa_keygen_bits:4096
    
    # Generate certificate signing request
    openssl req -new -key /etc/ssl/private/ollama-distributed.key \
      -out /etc/ssl/certs/ollama-distributed.csr \
      -subj "/C=US/ST=State/L=City/O=Organization/CN=ollama-distributed.local"
    
    # Generate self-signed certificate
    openssl x509 -req -days 365 -in /etc/ssl/certs/ollama-distributed.csr \
      -signkey /etc/ssl/private/ollama-distributed.key \
      -out /etc/ssl/certs/ollama-distributed.crt
    
    # Set permissions
    chmod 600 /etc/ssl/private/ollama-distributed.key
    chmod 644 /etc/ssl/certs/ollama-distributed.crt
  
  # Production certificate request template
  production_csr_config: |
    [ req ]
    default_bits = 4096
    default_md = sha256
    distinguished_name = req_distinguished_name
    req_extensions = v3_req
    
    [ req_distinguished_name ]
    countryName = US
    stateOrProvinceName = California
    localityName = San Francisco
    organizationName = Ollama Distributed Inc.
    commonName = ollama-distributed.com
    
    [ v3_req ]
    basicConstraints = CA:FALSE
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    subjectAltName = @alt_names
    
    [ alt_names ]
    DNS.1 = ollama-distributed.com
    DNS.2 = *.ollama-distributed.com
    DNS.3 = api.ollama-distributed.com
    DNS.4 = admin.ollama-distributed.com