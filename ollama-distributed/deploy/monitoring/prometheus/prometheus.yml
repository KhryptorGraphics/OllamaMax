# Prometheus Configuration for Ollamacron
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ollamacron'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"
  - "rules/ollama_distributed.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 30s

  # Ollama Distributed nodes
  - job_name: 'ollama-distributed'
    static_configs:
      - targets:
        - 'ollama-distributed:9090'
        - 'ollama-distributed-node-1:9090'
        - 'ollama-distributed-node-2:9090'
        - 'ollama-distributed-node-3:9090'
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: ollama-distributed:9090

  # Ollama Distributed Health Checks
  - job_name: 'ollama-distributed-health'
    static_configs:
      - targets:
        - 'ollama-distributed:8080'
        - 'ollama-distributed-node-1:8080'
        - 'ollama-distributed-node-2:8080'
        - 'ollama-distributed-node-3:8080'
    metrics_path: /health
    scrape_interval: 30s
    scrape_timeout: 5s

  # Ollama Distributed Dashboard
  - job_name: 'ollama-distributed-dashboard'
    static_configs:
      - targets:
        - 'ollama-distributed-dashboard:8081'
    metrics_path: /api/dashboard/metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # Docker containers (if running in Docker)
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-proxy:9323']
    metrics_path: /metrics
    scrape_interval: 30s

  # Node Exporter
  - job_name: 'node'
    static_configs:
      - targets: 
        - 'node-exporter:9100'
    metrics_path: /metrics
    scrape_interval: 30s

  # cAdvisor
  - job_name: 'cadvisor'
    static_configs:
      - targets: 
        - 'cadvisor:8080'
    metrics_path: /metrics
    scrape_interval: 30s

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: 
        - 'redis-exporter:9121'
    metrics_path: /metrics
    scrape_interval: 30s

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: 
        - 'grafana:3000'
    metrics_path: /metrics
    scrape_interval: 30s

  # Kubernetes API Server (if running in K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes nodes (if running in K8s)
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes pods (if running in K8s)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Kubernetes services (if running in K8s)
  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
      - role: service
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

# Remote storage configuration (optional)
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/prom/push"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 50GB
    wal-compression: true