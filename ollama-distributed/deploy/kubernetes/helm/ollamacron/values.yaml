# Default values for ollamacron
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  # Image registry
  imageRegistry: ""
  # Image pull secrets
  imagePullSecrets: []
  # Storage class
  storageClass: ""

# Ollamacron configuration
ollamacron:
  # Number of replicas
  replicaCount: 3
  
  # Image configuration
  image:
    repository: ollamacron/ollamacron
    tag: "latest"
    pullPolicy: IfNotPresent
  
  # Service account
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  # Pod security context
  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
  
  # Container security context
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
      add:
        - NET_BIND_SERVICE
  
  # Resource limits and requests
  resources:
    limits:
      cpu: "4000m"  # 4 cores
      memory: "8Gi"
      ephemeral-storage: "20Gi"
    requests:
      cpu: "1000m"  # 1 core
      memory: "2Gi"
      ephemeral-storage: "10Gi"
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - ollamacron
            topologyKey: kubernetes.io/hostname
  
  # Environment variables
  env:
    - name: OLLAMACRON_NODE_ID
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: OLLAMACRON_CLUSTER_MODE
      value: "kubernetes"
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: ollama-secrets
          key: jwt-secret
    - name: JWT_ISSUER
      value: "ollama-k8s"
    - name: JWT_AUDIENCE
      value: "ollama-k8s-api"
    - name: TLS_CERT_PATH
      value: "/etc/ssl/certs/tls.crt"
    - name: TLS_KEY_PATH
      value: "/etc/ssl/private/tls.key"
    - name: CORS_ALLOWED_ORIGINS
      valueFrom:
        configMapKeyRef:
          name: ollama-config
          key: cors-allowed-origins
  
  # Configuration
  config:
    # Server configuration
    server:
      bind: "0.0.0.0:8080"
      tls:
        enabled: true
        cert_file: "/etc/ssl/certs/tls.crt"
        key_file: "/etc/ssl/private/tls.key"
        min_version: "1.3"
    
    # P2P networking
    p2p:
      enabled: true
      listen_addr: "/ip4/0.0.0.0/tcp/9000"
      discovery:
        enabled: true
        rendezvous: "ollamacron-k8s-v1"
    
    # Logging
    logging:
      level: "info"
      format: "json"
    
    # Metrics
    metrics:
      enabled: true
      bind: "0.0.0.0:9090"
    
    # Health checks
    health:
      enabled: true
      bind: "0.0.0.0:8081"
  
  # Persistence
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    annotations: {}
  
  # Probes
  livenessProbe:
    httpGet:
      path: /health
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /health
      port: 8081
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # Service configuration
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    nodePort: ""
    annotations: {}
    labels: {}
  
  # P2P service configuration
  p2pService:
    type: ClusterIP
    port: 9000
    targetPort: 9000
    annotations: {}
    labels: {}
  
  # Metrics service configuration
  metricsService:
    type: ClusterIP
    port: 9090
    targetPort: 9090
    annotations: {}
    labels: {}

# Ingress configuration with security
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-burst: "200"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.ollama-distributed.com"
  hosts:
    - host: ollama-distributed.com
      paths:
        - path: /
          pathType: Prefix
        - path: /api
          pathType: Prefix
  tls:
    - secretName: ollama-tls
      hosts:
        - ollama-distributed.com

# Horizontal Pod Autoscaler
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Pod Disruption Budget
pdb:
  enabled: true
  minAvailable: 1
  # maxUnavailable: 1

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - protocol: TCP
          port: 9090
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  namespace: ""
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  honorLabels: false
  jobLabel: "app.kubernetes.io/name"

# Prometheus Rules
prometheusRule:
  enabled: true
  namespace: ""
  labels: {}
  rules:
    - alert: OllamacronHighErrorRate
      expr: rate(ollamacron_http_requests_total{status=~"5.."}[5m]) > 0.05
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High error rate detected"
        description: "Error rate is above 5% for 5 minutes"
    
    - alert: OllamacronHighLatency
      expr: histogram_quantile(0.95, rate(ollamacron_http_request_duration_seconds_bucket[5m])) > 10
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "High latency detected"
        description: "95th percentile latency is above 10 seconds"
    
    - alert: OllamacronPodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total{container="ollamacron"}[15m]) > 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "Pod is crash looping"
        description: "Pod {{ $labels.pod }} is restarting frequently"

# External dependencies
redis:
  enabled: true
  auth:
    enabled: true
    password: "CHANGE_THIS_TO_A_SECURE_REDIS_PASSWORD"
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 8Gi

prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 20Gi
    retention: "15d"
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 2Gi
  pushgateway:
    enabled: false
  nodeExporter:
    enabled: true
  kubeStateMetrics:
    enabled: true

grafana:
  enabled: true
  persistence:
    enabled: true
    size: 2Gi
  adminPassword: "CHANGE_THIS_TO_A_SECURE_GRAFANA_PASSWORD"
  defaultDashboardsEnabled: true
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      ollamacron-overview:
        gnetId: 1860
        revision: 27
        datasource: Prometheus

# Tests
tests:
  image:
    repository: busybox
    tag: latest
    pullPolicy: IfNotPresent