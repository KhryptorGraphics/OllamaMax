# Kubernetes Secrets Template for Ollama Distributed
# Base64 encode all secret values before applying

apiVersion: v1
kind: Secret
metadata:
  name: ollama-secrets
  namespace: default
  labels:
    app.kubernetes.io/name: ollamacron
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # JWT Configuration (base64 encoded)
  # Generate with: echo -n "your-secret" | base64
  jwt-secret: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfNjRfQ0hBUl9TRUNSRVRfS0VZX0dFTkVSQVRFRF9XSVRIX09QRU5TU0w="
  jwt-issuer: "b2xsYW1hLWs4cw=="  # ollama-k8s
  jwt-audience: "b2xsYW1hLWs4cy1hcGk="  # ollama-k8s-api
  
  # Database Configuration (base64 encoded)
  database-host: "cG9zdGdyZXM="  # postgres
  database-username: "b2xsYW1h"  # ollama
  database-password: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfREFUQUJBU0VfUEFTU1dPUkQ="
  database-name: "b2xsYW1hX2Rpc3RyaWJ1dGVk"  # ollama_distributed
  
  # Redis Configuration (base64 encoded)
  redis-password: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfUkVESVNfUEFTU1dPUkQ="
  
  # S3/Storage Configuration (base64 encoded)
  s3-access-key: "WU9VUl9BV1NfQUNDRVNTX0tFWV9JRA=="
  s3-secret-key: "WU9VUl9BV1NfU0VDUkVUX0FDQ0VTU19LRVk="
  s3-bucket: "b2xsYW1hLWRpc3RyaWJ1dGVkLW1vZGVscw=="  # ollama-distributed-models
  
  # Encryption Keys (base64 encoded)
  # Generate with: openssl rand -base64 32 | base64
  encryption-key: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfRU5DUllQVElPTl9LRVk="
  backup-encryption-key: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfQkFDS1VQX0tFWQ=="
  
  # Monitoring Configuration (base64 encoded)
  grafana-admin-password: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfR1JBRkFOQV9QQVNTV09SRA=="
  grafana-secret-key: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfR1JBRkFOQV9TRUNSRVRfS0VZ"
  prometheus-auth-token: "Q0hBTkdFX1RISVNfVE9fQV9TRUNVUkVfUFJPTUVUSEVVU19UT0tFTg=="
  
  # External Service Credentials (base64 encoded)
  smtp-password: "WU9VUl9TTVRQX1BBU1NXT1JE"
  slack-webhook-url: "aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvWU9VUi9XRUJIT09LL1VSTA=="
  elastic-apm-secret-token: "WU9VUl9BUE1fU0VDUkVUX1RPS0VO"
  
  # API Keys (base64 encoded)
  huggingface-api-key: "WU9VUl9IVUdHSU5HRkFDRV9BUElfS0VZ"
  openai-api-key: "WU9VUl9PUEVOQULFX0FQSV9LRVk="

---
apiVersion: v1
kind: Secret
metadata:
  name: ollama-tls
  namespace: default
  labels:
    app.kubernetes.io/name: ollamacron
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS Certificate and Key (base64 encoded)
  # Replace with your actual certificate and key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...

---
apiVersion: v1
kind: Secret
metadata:
  name: ollama-ca-certs
  namespace: default
  labels:
    app.kubernetes.io/name: ollamacron
    app.kubernetes.io/component: ca
type: Opaque
data:
  # CA Bundle (base64 encoded)
  ca-bundle.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...

---
# Docker Registry Secret (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: ollama-registry-secret
  namespace: default
  labels:
    app.kubernetes.io/name: ollamacron
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJyZWdpc3RyeS5leGFtcGxlLmNvbSI6IHsKICAgICAgInVzZXJuYW1lIjogInVzZXJuYW1lIiwKICAgICAgInBhc3N3b3JkIjogInBhc3N3b3JkIiwKICAgICAgImF1dGgiOiAiZEdWemREcDBaWE4wIgogICAgfQogIH0KfQ==

---
# Service Account Token Secret (for external access)
apiVersion: v1
kind: Secret
metadata:
  name: ollama-service-account-token
  namespace: default
  labels:
    app.kubernetes.io/name: ollamacron
    app.kubernetes.io/component: service-account
  annotations:
    kubernetes.io/service-account.name: ollama-service-account
type: kubernetes.io/service-account-token