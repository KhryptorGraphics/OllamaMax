# Docker Compose configuration for Ollamacron multi-node cluster
# Production-ready setup with load balancing and monitoring

version: '3.8'

services:
  # Load balancer
  nginx:
    image: nginx:1.25-alpine
    container_name: ollamacron-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - ollamacron-node-1
      - ollamacron-node-2
      - ollamacron-node-3
    networks:
      - ollamacron-network

  # Ollamacron nodes
  ollamacron-node-1:
    build:
      context: ../../..
      dockerfile: deploy/docker/multi-stage/Dockerfile
    image: ollamacron:latest
    container_name: ollamacron-node-1
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9000:9000"
    volumes:
      - ollamacron-data-1:/app/data
      - ollamacron-logs-1:/app/logs
      - ./config:/app/config:ro
    environment:
      - OLLAMACRON_CONFIG=/app/config/config.yaml
      - OLLAMACRON_DATA_DIR=/app/data
      - OLLAMACRON_LOG_DIR=/app/logs
      - OLLAMACRON_NODE_ID=node-1
      - OLLAMACRON_CLUSTER_PEERS=ollamacron-node-2:9000,ollamacron-node-3:9000
    networks:
      - ollamacron-network
    depends_on:
      - prometheus
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  ollamacron-node-2:
    build:
      context: ../../..
      dockerfile: deploy/docker/multi-stage/Dockerfile
    image: ollamacron:latest
    container_name: ollamacron-node-2
    restart: unless-stopped
    ports:
      - "8081:8080"
      - "9001:9000"
    volumes:
      - ollamacron-data-2:/app/data
      - ollamacron-logs-2:/app/logs
      - ./config:/app/config:ro
    environment:
      - OLLAMACRON_CONFIG=/app/config/config.yaml
      - OLLAMACRON_DATA_DIR=/app/data
      - OLLAMACRON_LOG_DIR=/app/logs
      - OLLAMACRON_NODE_ID=node-2
      - OLLAMACRON_CLUSTER_PEERS=ollamacron-node-1:9000,ollamacron-node-3:9000
    networks:
      - ollamacron-network
    depends_on:
      - prometheus
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  ollamacron-node-3:
    build:
      context: ../../..
      dockerfile: deploy/docker/multi-stage/Dockerfile
    image: ollamacron:latest
    container_name: ollamacron-node-3
    restart: unless-stopped
    ports:
      - "8082:8080"
      - "9002:9000"
    volumes:
      - ollamacron-data-3:/app/data
      - ollamacron-logs-3:/app/logs
      - ./config:/app/config:ro
    environment:
      - OLLAMACRON_CONFIG=/app/config/config.yaml
      - OLLAMACRON_DATA_DIR=/app/data
      - OLLAMACRON_LOG_DIR=/app/logs
      - OLLAMACRON_NODE_ID=node-3
      - OLLAMACRON_CLUSTER_PEERS=ollamacron-node-1:9000,ollamacron-node-2:9000
    networks:
      - ollamacron-network
    depends_on:
      - prometheus
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: ollamacron-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./monitoring/prometheus-cluster.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - ollamacron-network

  grafana:
    image: grafana/grafana:10.0.0
    container_name: ollamacron-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    networks:
      - ollamacron-network

  # Shared cache
  redis:
    image: redis:7-alpine
    container_name: ollamacron-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - ollamacron-network

  # Log aggregation
  elasticsearch:
    image: elasticsearch:8.9.0
    container_name: ollamacron-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - ollamacron-network

  logstash:
    image: logstash:8.9.0
    container_name: ollamacron-logstash
    restart: unless-stopped
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./monitoring/logstash/config:/usr/share/logstash/config:ro
    depends_on:
      - elasticsearch
    networks:
      - ollamacron-network

  kibana:
    image: kibana:8.9.0
    container_name: ollamacron-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - ollamacron-network

volumes:
  ollamacron-data-1:
    driver: local
  ollamacron-data-2:
    driver: local
  ollamacron-data-3:
    driver: local
  ollamacron-logs-1:
    driver: local
  ollamacron-logs-2:
    driver: local
  ollamacron-logs-3:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  redis-data:
    driver: local
  elasticsearch-data:
    driver: local

networks:
  ollamacron-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16