name: Issue Triage Automation

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: Label Issues
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = [];
            
            // Analyze issue title and body
            const text = (issue.title + ' ' + issue.body).toLowerCase();
            
            // Bug detection
            if (text.includes('bug') || text.includes('error') || text.includes('crash')) {
              labels.push('bug');
            }
            
            // Feature detection
            if (text.includes('feature') || text.includes('enhancement') || text.includes('request')) {
              labels.push('enhancement');
            }
            
            // Security detection
            if (text.includes('security') || text.includes('vulnerability') || text.includes('cve')) {
              labels.push('security');
              labels.push('priority:high');
            }
            
            // Performance detection
            if (text.includes('performance') || text.includes('slow') || text.includes('memory')) {
              labels.push('performance');
            }
            
            // Documentation detection
            if (text.includes('documentation') || text.includes('docs') || text.includes('readme')) {
              labels.push('documentation');
            }
            
            // P2P/Networking detection
            if (text.includes('p2p') || text.includes('network') || text.includes('libp2p')) {
              labels.push('networking');
            }
            
            // Consensus detection
            if (text.includes('consensus') || text.includes('raft') || text.includes('leader')) {
              labels.push('consensus');
            }
            
            // API detection
            if (text.includes('api') || text.includes('endpoint') || text.includes('rest')) {
              labels.push('api');
            }
            
            // Add labels if any were detected
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              });
            }
            
            // Add needs-triage label for new issues
            if (context.payload.action === 'opened') {
              await github.rest.issues.addLabels({
                issue_number: issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['needs-triage']
              });
              
              // Post welcome message
              await github.rest.issues.createComment({
                issue_number: issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `üëã Thanks for opening this issue!
                
                Our automated triage system has analyzed your issue and applied relevant labels.
                A maintainer will review this issue soon.
                
                **Please ensure you've provided:**
                - Clear description of the issue
                - Steps to reproduce (if applicable)
                - Expected vs actual behavior
                - System/environment information
                
                For faster resolution, check our [documentation](../docs) and [existing issues](../issues).`
              });
            }

  duplicate-detection:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for Duplicates
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            
            // Search for similar issues
            const searchQuery = issue.title.split(' ').slice(0, 5).join(' ');
            const similarIssues = await github.rest.search.issuesAndPullRequests({
              q: `${searchQuery} repo:${context.repo.owner}/${context.repo.repo} is:issue`,
              sort: 'relevance',
              per_page: 5
            });
            
            if (similarIssues.data.items.length > 1) {
              const potentialDuplicates = similarIssues.data.items
                .filter(i => i.number !== issue.number)
                .map(i => `#${i.number}: ${i.title}`)
                .join('\n');
              
              await github.rest.issues.createComment({
                issue_number: issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `‚ö†Ô∏è **Potential Duplicate Issues Detected**
                
                Please check these similar issues:
                ${potentialDuplicates}
                
                If this is a duplicate, please close this issue and add your information to the existing one.`
              });
            }