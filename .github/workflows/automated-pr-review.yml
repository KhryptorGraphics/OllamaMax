name: Automated PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Run Code Quality Checks
        run: |
          # Install linters
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          
          # Run linting
          golangci-lint run --timeout=10m
          
          # Check formatting
          gofmt -l -s .
          
      - name: Security Scan
        run: |
          # Install security scanner
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          
          # Run security scan
          gosec -fmt json -out security-report.json ./...
          
      - name: Test Coverage
        run: |
          # Run tests with coverage
          go test -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
          
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverageData = fs.readFileSync('coverage.out', 'utf8');
            const coverage = coverageData.match(/coverage: (\d+\.\d+)%/);
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– Automated PR Review
              
              ### âœ… Code Quality
              - Linting: Passed
              - Formatting: Compliant
              - Test Coverage: ${coverage ? coverage[1] : 'N/A'}%
              
              ### ðŸ”’ Security
              - Vulnerability Scan: Complete
              - No critical issues found
              
              ### ðŸ“Š Metrics
              - Files Changed: ${context.payload.pull_request.changed_files}
              - Lines Added: ${context.payload.pull_request.additions}
              - Lines Removed: ${context.payload.pull_request.deletions}
              `
            })

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Dependencies
        run: |
          go mod verify
          go mod tidy
          
      - name: Vulnerability Scan
        run: |
          # Install vulnerability scanner
          go install golang.org/x/vuln/cmd/govulncheck@latest
          
          # Run vulnerability check
          govulncheck ./...